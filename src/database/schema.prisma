generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Client {
    id          String       @id @default(dbgenerated("generate_tsid('Client')")) @db.Uuid
    name        String       @db.VarChar(50)
    email       String       @unique @db.VarChar(320)
    phoneNumber String       @db.VarChar(15)
    shirtOrders ShirtOrder[]
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @default(now()) @updatedAt
}

model Shirt {
    id                 String       @id @default(dbgenerated("generate_tsid('Shirt')")) @db.Uuid
    model              String       @db.VarChar(50)
    manufacturingPrice Decimal      @default(36) @db.Decimal(4, 2)
    prices             Decimal[]    @db.Decimal(4, 2)
    photos             String[]     @db.VarChar(100)
    colors             String[]     @db.VarChar(15)
    orders             ShirtOrder[]
    createdAt          DateTime     @default(now())
    updatedAt          DateTime     @default(now()) @updatedAt
}

model ShirtBatch {
    id         String       @id @default(dbgenerated("generate_tsid('ShirtBatch')")) @db.Uuid
    orderedAt  DateTime     @db.Date
    receivedAt DateTime?    @db.Date
    shirts     ShirtOrder[]
    createdAt  DateTime     @default(now())
    updatedAt  DateTime     @default(now()) @updatedAt
}

model ShirtOrder {
    id           String      @id @default(dbgenerated("generate_tsid('ShirtOrder')")) @db.Uuid
    clientId     String      @db.Uuid
    client       Client      @relation(fields: [clientId], references: [id])
    batchId      String?     @db.Uuid
    batch        ShirtBatch? @relation(fields: [batchId], references: [id])
    shirtId      String      @db.Uuid
    shirt        Shirt       @relation(fields: [shirtId], references: [id])
    size         String      @db.VarChar(3)
    color        String      @db.VarChar(15)
    downPayment  Decimal     @db.Decimal(4, 2)
    finalPayment Decimal?    @db.Decimal(4, 2)
    receipts     String[]    @db.VarChar(112)
    cancelledAt  DateTime?   @db.Date
    deliveredTo  String?     @db.VarChar(50)
    deliveredAt  DateTime?   @db.Date
    expiredAt    DateTime?   @db.Date
    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @default(now()) @updatedAt
}
